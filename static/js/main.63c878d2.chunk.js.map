{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptDate","aptTime","aptNotes","handleChange","bind","handleAdd","e","preventDefault","tempApts","this","props","AddAppointment","setState","toggleForm","target","value","name","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","date","parse","format","App","myAppointments","queryText","lastIndex","addAppointment","query","order","dir","apt","unshift","without","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63c878d2.chunk.js","sourcesContent":["import React , { Component } from 'react'\nimport { FaPlus } from 'react-icons/fa';\n\n\nclass AddAppointments extends Component{\n    constructor(){\n        super();\n        this.state={\n            petName:\"\",\n            ownerName:\"\",\n            aptDate:\"\",\n            aptTime:\"\",\n            aptNotes: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleAdd = this.handleAdd.bind(this)\n    }\n\n    handleAdd(e){\n        e.preventDefault()\n\n        let tempApts ={\n            petName:this.state.petName,\n            ownerName:this.state.ownerName,\n            aptDate:this.state.aptDate  + ' ' + this.state.aptTime,\n            aptNotes: this.state.aptNotes\n        }\n        this.props.AddAppointment(tempApts)\n\n        this.setState({\n            petName:\"\",\n            ownerName:\"\",\n            aptDate:\"\",\n            aptTime:\"\",\n            aptNotes: \"\"\n        })\n        this.props.toggleForm()\n\n    }\n\n\n    handleChange(e){\n        const target = e.target\n        const value = target.value\n        const name = target.name\n\n        this.setState({\n            [name]: value\n        })\n    }\n    render(){\n        return(\n            <div className={\n                'card textcenter mt-3 ' +\n                (this.props.formDisplay ? '' : 'add-appointment')\n            }>\n\n            <div className=\"apt-addheading card-header bg-primary text-white\"\n            onClick={this.props.toggleForm}>\n              <FaPlus /> Add Appointment\n            </div>\n  \n            <div className=\"card-body\">\n            <form id=\"aptForm\" noValidate\n            onSubmit={this.handleAdd}>\n              <div className=\"form-group form-row\">\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"petName\"\n                  readOnly\n                >\n                  Pet Name\n                </label>\n                <div className=\"col-md-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"petName\"\n                    placeholder=\"Pet's Name\"\n                    value={this.state.petName}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row\">\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"ownerName\"\n                >\n                  Pet Owner\n                </label>\n                <div className=\"col-md-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"ownerName\"\n                    placeholder=\"Owner's Name\"\n                    value={this.state.ownerName}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row\">\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"aptDate\"\n                >\n                  Date\n                </label>\n                <div className=\"col-md-4\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    name=\"aptDate\"\n                    id=\"aptDate\"\n                    value={this.state.aptDate}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <label\n                  className=\"col-md-2 col-form-label text-md-right\"\n                  htmlFor=\"aptTime\"\n                >\n                  Time\n                </label>\n                <div className=\"col-md-4\">\n                  <input\n                    type=\"time\"\n                    className=\"form-control\"\n                    name=\"aptTime\"\n                    id=\"aptTime\"\n                    value={this.state.aptTime}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row\">\n                <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                  Apt. Notes\n                </label>\n                <div className=\"col-md-10\">\n                  <textarea\n                    className=\"form-control\"\n                    rows=\"4\"\n                    cols=\"50\"\n                    name=\"aptNotes\"\n                    id=\"aptNotes\"\n                    placeholder=\"Appointment Notes\"\n                    value={this.state.aptNotes}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group form-row mb-0\">\n                <div className=\"offset-md-2 col-md-10\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary d-block ml-auto\"\n                  >\n                    Add Appointment\n                  </button>\n                </div>\n              </div>\n            </form>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default AddAppointments;","import React , { Component } from 'react'\n\n\nclass SearchAppointments extends Component{\n    render(){\n        return (\n            <div className=\"search-appointments row justify-content-center my-4\">\n            <div className=\"col-md-6\">\n              <div className=\"input-group\">\n                <input\n                  id=\"SearchApts\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Search Appointments\"\n                  onChange={e => this.props.searchApts(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary dropdown-toggle\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Sort by: <span className=\"caret\" />\n                  </button>\n    \n                  <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                    <button className={\n                        ' sort-by dropdown-item ' +\n                        (this.props.orderBy  === 'petName' ? 'active' : '')\n                    } \n                    onClick={e => this.props.changeOrder('petName', this.props.orderDir)}\n\n                    href=\"#\">\n                      Pet Name\n                    </button>\n                    <button className={\n                        ' sort-by dropdown-item ' +\n                        (this.props.orderBy  === 'aptDate' ? 'active' : '')\n                    }\n                    onClick={e => this.props.changeOrder('aptDate', this.props.orderDir)}\n                     href=\"#\">\n                      Date\n                    </button>\n                    <button className={\n                        ' sort-by dropdown-item ' +\n                        (this.props.orderBy  === 'ownerName' ? 'active' : '')\n                        \n                    } \n                    onClick={e => this.props.changeOrder('ownerName', this.props.orderDir)}\n\n                    href=\"#\">\n                      Owner\n                    </button>\n                    <div role=\"separator\" className=\"dropdown-divider\" />\n                    <button className={\n                        ' sort-by dropdown-item ' +\n                        (this.props.orderDir  === 'asc' ? 'active' : '')\n                    }\n                    onClick={e => this.props.changeOrder(this.props.orderBy, 'asc')}\n                     href=\"#\">\n                      Asc\n                    </button>\n                    <button className={\n                        ' sort-by dropdown-item ' +\n                        (this.props.orderDir  === 'dec' ? 'active' : '')\n                    } \n                    onClick={e => this.props.changeOrder(this.props.orderBy, 'desc')}\n                    href=\"#\">\n                      Desc\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>)\n    }\n}\n\nexport default SearchAppointments;","import React , { Component } from 'react'\nimport { FaTimes } from 'react-icons/fa'\nimport Moment from 'react-moment'\n\n\nclass ListAppointments extends Component{\n    render(){\n        return (\n            <div className=\"appointment-list item-list mb-3\">\n                {this.props.appointments.map(item => (\n                    \n                <div className=\"pet-item col media py-3\" key={item.aptId}>\n              <div className=\"mr-3\">\n                <button className=\"pet-delete btn btn-sm btn-danger\"\n                onClick={()=> this.props.deleteAppointment(item)}>\n                    <FaTimes />\n                </button>\n              </div>\n  \n              <div className=\"pet-info media-body\">\n                <div className=\"pet-head d-flex\">\n                <span className=\"pet-name\">{item.petName}</span>\n                  <span className=\"apt-date ml-auto\">\n                      <Moment\n                      date={item.aptDate}\n                      parse = \"YYYY-MM-dd hh-mm\" \n                      format=\"MMM-D h:ma\"\n                      />\n                  </span>\n                </div>\n  \n                <div className=\"owner-name\">\n                  <span className=\"label-item\">Owner: </span>\n                  <span>{item.ownerName}</span>\n                </div>\n                <div className=\"apt-notes\">{item.aptNotes}</div>\n              </div>\n            </div>\n                ))}\n            </div>\n            \n        )\n    }\n}\n\nexport default ListAppointments;","import React from 'react';\nimport '../css/App.css';\nimport AddAppointments  from './AddAppointments'\nimport SearchAppointments  from './SearchAppointments'\nimport ListAppointments  from './ListAppointments'\nimport { without } from 'lodash'\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      myAppointments: [],\n      orderBy: \"petName\",\n      orderDir:\"asc\",\n      queryText: '',\n      formDisplay: false,\n      lastIndex: 0\n    }\n    this.deleteAppointment = this.deleteAppointment.bind(this)\n    this.toggleForm = this.toggleForm.bind(this)\n    this.addAppointment = this.addAppointment.bind(this)\n    this.changeOrder = this.changeOrder.bind(this)\n    this.searchApts = this.searchApts.bind(this)\n  }\n\n  searchApts(query){\n    this.setState({\n      query: query\n    })\n  }\n\n  changeOrder(order, dir){\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    })\n  }\n\n  addAppointment(apt){\n    let tempApts = this.state.myAppointments\n    apt.aptId = this.state.lastIndex\n    tempApts.unshift(apt)\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    })\n  }\n\n  toggleForm(){\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    })\n  }\n\n  deleteAppointment(apt){\n    let tempApts = this.state.myAppointments\n    tempApts = without(tempApts, apt)\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  componentDidMount(){\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(result => {\n      const apts = result.map((item => {\n        item.aptId = this.state.lastIndex\n        this.setState({lastIndex: this.state.lastIndex + 1})\n        return item\n      }))\n      this.setState({\n        myAppointments: apts\n      })\n    })\n  \n  }\n  render(){\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDir === \"asc\"){\n      order=1\n    }\n    else{\n      order=-1\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if(a[this.state.orderBy].toLowerCase() <\n      b[this.state.orderBy].toLowerCase()\n      ){\n        return -1 * order;\n      }\n      else{\n        return 1 * order\n      }\n    }).filter(eachItem => {\n      return(\n        eachItem['petName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['ownerName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['aptNotes']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) \n      )\n    })\n   \n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments \n                formDisplay ={this.state.formDisplay}\n                toggleForm={this.toggleForm}\n                addAppointment={this.addAppointment}\n                />\n                <SearchAppointments \n                orderBy={this.state.orderBy}\n                orderDir={this.state.orderDir}\n                changeOrder={this.changeOrder}\n                searchApts={this.searchApts}  \n                />\n                <ListAppointments appointments={filteredApts}\n                deleteAppointment={this.deleteAppointment}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>  \n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'jquery/dist/jquery.js'\nimport 'popper.js/dist/umd/popper.js'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport {  } from \"module\";\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}